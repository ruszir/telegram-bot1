import os
import telebot
import sqlite3
from datetime import datetime

API_TOKEN = os.getenv("7536673665:AAGURJv216qotPw428s_oSo7M4VHoQGY_DA")
bot = telebot.TeleBot(API_TOKEN)


# –°–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
admin_ids = ["5768048465", "171846439"]

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ SQLite
conn = sqlite3.connect("users.db", check_same_thread=False)
cursor = conn.cursor()

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
cursor.execute("""
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY,
    points INTEGER DEFAULT 0,
    status TEXT DEFAULT '–û–±—ã—á–Ω—ã–π'
)
""")
conn.commit()


# ‚úÖ /start ‚Äì –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@bot.message_handler(commands=['start'])
def welcome(message):
    user_id = message.from_user.id
    cursor.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
    user = cursor.fetchone()

    if not user:
        cursor.execute("INSERT INTO users (user_id) VALUES (?)", (user_id,))
        conn.commit()

    bot.send_message(user_id, "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏!\n"
                              "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∫–∞–ø–ª–∏–≤–∞—Ç—å –±–∞–ª–ª—ã, —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∞–∫—Ü–∏—è—Ö –∏ –æ–±–º–µ–Ω–∏–≤–∞—Ç—å –∏—Ö –Ω–∞ –±–æ–Ω—É—Å—ã.\n\n"
                              "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")


# ‚úÖ /help ‚Äì –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
@bot.message_handler(commands=['help'])
def show_help(message):
    bot.send_message(message.from_user.id, "üìã –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n"
                                           "/start - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏\n"
                                           "/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∏ –±–∞–ª–ª—ã\n"
                                           "/rewards - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–æ–Ω—É—Å—ã\n"
                                           "/redeem - –û–±–º–µ–Ω—è—Ç—å –±–∞–ª–ª—ã –Ω–∞ –±–æ–Ω—É—Å\n"
                                           "/invite - –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞\n"
                                           "/feedback - –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤\n"
                                           "/events - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞—Ñ–∏—à—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π\n"
                                           "/contact - –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π\n"
                                           "/add_points - –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)"
                                           "/book_table - –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫")


# ‚úÖ /status ‚Äì –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –∏ —Å—Ç–∞—Ç—É—Å–∞
@bot.message_handler(commands=['status'])
def show_status(message):
    user_id = message.from_user.id
    cursor.execute("SELECT points, status FROM users WHERE user_id=?", (user_id,))
    user = cursor.fetchone()

    if user:
        points, status = user
        bot.send_message(user_id, f"üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: {points} –±–∞–ª–ª–æ–≤\nüîπ –í–∞—à —Å—Ç–∞—Ç—É—Å: {status}")
    else:
        bot.send_message(user_id, "‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –í–≤–µ–¥–∏—Ç–µ /start.")


# ‚úÖ /rewards ‚Äì –°–ø–∏—Å–æ–∫ –±–æ–Ω—É—Å–æ–≤
@bot.message_handler(commands=['rewards'])
def show_rewards(message):
    bot.send_message(message.from_user.id, "üéÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ –±–æ–Ω—É—Å—ã:\n"
                                           "1Ô∏è‚É£ –°–∫–∏–¥–∫–∞ 10% ‚Äì 250 –±–∞–ª–ª–æ–≤\n"
                                           "2Ô∏è‚É£ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ ‚Äì 400 –±–∞–ª–ª–æ–≤\n"
                                           "3Ô∏è‚É£ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–∞–ª—å—è–Ω ‚Äì 1000 –±–∞–ª–ª–æ–≤")


# ‚úÖ /redeem ‚Äì –û–±–º–µ–Ω –±–∞–ª–ª–æ–≤ –Ω–∞ –±–æ–Ω—É—Å (—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É)
@bot.message_handler(commands=['redeem'])
def redeem_points(message):
    user_id = message.from_user.id
    bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –±–æ–Ω—É—Å–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å:\n"
                              "–ü—Ä–∏–º–µ—Ä: /redeem 1 (–°–∫–∏–¥–∫–∞ 10%)")
    bot.register_next_step_handler(message, process_redeem)


def process_redeem(message):
    user_id = message.from_user.id
    command = message.text.split()

    try:
        reward_id = int(command[1])

        rewards = {1: ("–°–∫–∏–¥–∫–∞ 10%", 250), 2: ("–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫", 400), 3: ("–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–∞–ª—å—è–Ω", 1000)}

        if reward_id in rewards:
            reward_name, cost = rewards[reward_id]

            cursor.execute("SELECT points FROM users WHERE user_id=?", (user_id,))
            points = cursor.fetchone()[0]

            if points >= cost:
                cursor.execute("UPDATE users SET points = points - ? WHERE user_id=?", (cost, user_id))
                conn.commit()
                bot.send_message(user_id, f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–º–µ–Ω—è–ª–∏ {cost} –±–∞–ª–ª–æ–≤ –Ω–∞ '{reward_name}'!")
                for admin_id in admin_ids:
                    bot.send_message(admin_id, f"üîî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ–±–º–µ–Ω—è–ª {cost} –±–∞–ª–ª–æ–≤ –Ω–∞ '{reward_name}'")
            else:
                bot.send_message(user_id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤!")
        else:
            bot.send_message(user_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –±–æ–Ω—É—Å–∞!")

    except (IndexError, ValueError):
        bot.send_message(user_id, "‚ö† –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /redeem <–Ω–æ–º–µ—Ä_–±–æ–Ω—É—Å–∞>")


# ‚úÖ /invite ‚Äì –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞
@bot.message_handler(commands=['invite'])
def invite_friend(message):
    bot.send_message(message.from_user.id, "ü§ù –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–≥–∞ –ø–æ —Å—Å—ã–ª–∫–µ:\n"
                                           "üëâ @BARDUCK_hookah_bar_bot")


# ‚úÖ /feedback ‚Äì –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
@bot.message_handler(commands=['feedback'])
def feedback(message):
    user_id = message.from_user.id
    bot.send_message(user_id, "üìù –û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏–µ:")
    bot.register_next_step_handler(message, process_feedback)


def process_feedback(message):
    feedback_text = message.text
    for admin_id in admin_ids:
        bot.send_message(admin_id, f"üì¢ –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤:\n{feedback_text}")
    bot.send_message(message.from_user.id, "‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!")


# ‚úÖ /events ‚Äì –ê—Ñ–∏—à–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
@bot.message_handler(commands=['events'])
def show_events(message):
    bot.send_message(message.from_user.id, "üé≠ –ê—Ñ–∏—à–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π:\n"
                                           "üìå –®–µ—Ñ —Å—Ç–æ–ª\n"
                                           "üìå –í–µ—á–µ—Ä –∫–∏–Ω–æ\n"
                                           "üìå –¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è —Ñ—É—Ç–±–æ–ª–∞")


# ‚úÖ /contact ‚Äì –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π
@bot.message_handler(commands=['contact'])
def contact_admin(message):
    bot.send_message(message.from_user.id, "‚òé –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π:\n"
                                           "üìû +998-91-558-86-86\n"
                                           "üì≤ @saidspc23")


# ‚úÖ /add_points ‚Äì –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤ –∞–¥–º–∏–Ω–æ–º
@bot.message_handler(commands=['add_points'])
def add_points(message):
    user_id = message.from_user.id

    if str(user_id) in admin_ids:
        try:
            command = message.text.split()
            target_user_id = int(command[1])
            points = int(command[2])

            cursor.execute("SELECT * FROM users WHERE user_id=?", (target_user_id,))
            user = cursor.fetchone()

            if user:
                cursor.execute("UPDATE users SET points = points + ? WHERE user_id=?", (points, target_user_id))
                conn.commit()
                update_status(target_user_id)
                bot.send_message(target_user_id, f"‚úÖ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ {points} –±–∞–ª–ª–æ–≤!")
                bot.send_message(user_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_user_id} —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∏—Å–ª–µ–Ω–æ {points} –±–∞–ª–ª–æ–≤.")
            else:
                bot.send_message(user_id, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        except (IndexError, ValueError):
            bot.send_message(user_id, "‚ö† –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /add_points <user_id> <points>")
    else:
        bot.send_message(user_id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")


# ‚úÖ –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
def update_status(user_id):
    cursor.execute("SELECT points FROM users WHERE user_id=?", (user_id,))
    points = cursor.fetchone()[0]

    new_status = '–û–±—ã—á–Ω—ã–π'
    if points >= 10000:
        new_status = '–ó–æ–ª–æ—Ç–æ–π'
    elif points >= 5000:
        new_status = '–°–µ—Ä–µ–±—Ä—è–Ω—ã–π'

    cursor.execute("UPDATE users SET status=? WHERE user_id=?", (new_status, user_id))
    conn.commit()


# ‚úÖ /book_table ‚Äì –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–∏–∫–∞
@bot.message_handler(commands=['book_table'])
def book_table(message):
    user_id = message.from_user.id
    bot.send_message(user_id, "üìÖ –£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–∏–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2025-04-05 19:00(–≥–æ–¥-–º–µ—Å—è—Ü-–¥–µ–Ω—å —á–∞—Å-–º–∏–Ω—É—Ç—ã):")
    bot.register_next_step_handler(message, process_booking_date)


def process_booking_date(message):
    user_id = message.from_user.id
    booking_date = message.text.strip()

    try:
        datetime.strptime(booking_date, "%Y-%m-%d %H:%M")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–±–æ–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        for admin_id in admin_ids:
            try:
                bot.send_message(admin_id, f"üîî –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–∏–∫–∞:\n"
                                          f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª —Å—Ç–æ–ª–∏–∫ –Ω–∞ {booking_date}.")
            except Exception as e:
                bot.send_message(user_id, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É {admin_id}: {e}")

        bot.send_message(user_id, f"‚úÖ –í–∞—à —Å—Ç–æ–ª–∏–∫ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω –Ω–∞ {booking_date}. –ú—ã –∂–¥–µ–º –≤–∞—Å!")

    except ValueError:
        bot.send_message(user_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2025-04-05 19:00).")


# ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–µ—Ä–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    bot.reply_to(message, "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞! –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.")


# ‚úÖ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()